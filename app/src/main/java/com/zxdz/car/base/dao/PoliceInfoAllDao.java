package com.zxdz.car.base.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.zxdz.car.main.model.domain.PoliceInfoAll;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "POLICE_INFO_ALL".
*/
public class PoliceInfoAllDao extends AbstractDao<PoliceInfoAll, Void> {

    public static final String TABLENAME = "POLICE_INFO_ALL";

    /**
     * Properties of entity PoliceInfoAll.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property DLGJ_KH = new Property(0, String.class, "DLGJ_KH", false, "DLGJ__KH");
        public final static Property DLGJ_XM = new Property(1, String.class, "DLGJ_XM", false, "DLGJ__XM");
        public final static Property DLGJ_BMMC = new Property(2, String.class, "DLGJ_BMMC", false, "DLGJ__BMMC");
        public final static Property DLGJ_JH = new Property(3, String.class, "DLGJ_JH", false, "DLGJ__JH");
    }


    public PoliceInfoAllDao(DaoConfig config) {
        super(config);
    }
    
    public PoliceInfoAllDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"POLICE_INFO_ALL\" (" + //
                "\"DLGJ__KH\" TEXT," + // 0: DLGJ_KH
                "\"DLGJ__XM\" TEXT," + // 1: DLGJ_XM
                "\"DLGJ__BMMC\" TEXT," + // 2: DLGJ_BMMC
                "\"DLGJ__JH\" TEXT);"); // 3: DLGJ_JH
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"POLICE_INFO_ALL\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, PoliceInfoAll entity) {
        stmt.clearBindings();
 
        String DLGJ_KH = entity.getDLGJ_KH();
        if (DLGJ_KH != null) {
            stmt.bindString(1, DLGJ_KH);
        }
 
        String DLGJ_XM = entity.getDLGJ_XM();
        if (DLGJ_XM != null) {
            stmt.bindString(2, DLGJ_XM);
        }
 
        String DLGJ_BMMC = entity.getDLGJ_BMMC();
        if (DLGJ_BMMC != null) {
            stmt.bindString(3, DLGJ_BMMC);
        }
 
        String DLGJ_JH = entity.getDLGJ_JH();
        if (DLGJ_JH != null) {
            stmt.bindString(4, DLGJ_JH);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, PoliceInfoAll entity) {
        stmt.clearBindings();
 
        String DLGJ_KH = entity.getDLGJ_KH();
        if (DLGJ_KH != null) {
            stmt.bindString(1, DLGJ_KH);
        }
 
        String DLGJ_XM = entity.getDLGJ_XM();
        if (DLGJ_XM != null) {
            stmt.bindString(2, DLGJ_XM);
        }
 
        String DLGJ_BMMC = entity.getDLGJ_BMMC();
        if (DLGJ_BMMC != null) {
            stmt.bindString(3, DLGJ_BMMC);
        }
 
        String DLGJ_JH = entity.getDLGJ_JH();
        if (DLGJ_JH != null) {
            stmt.bindString(4, DLGJ_JH);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public PoliceInfoAll readEntity(Cursor cursor, int offset) {
        PoliceInfoAll entity = new PoliceInfoAll( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // DLGJ_KH
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // DLGJ_XM
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // DLGJ_BMMC
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3) // DLGJ_JH
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, PoliceInfoAll entity, int offset) {
        entity.setDLGJ_KH(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setDLGJ_XM(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDLGJ_BMMC(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDLGJ_JH(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(PoliceInfoAll entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(PoliceInfoAll entity) {
        return null;
    }

    @Override
    public boolean hasKey(PoliceInfoAll entity) {
        // TODO
        return false;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
